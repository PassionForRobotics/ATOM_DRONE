/******************************************************************
   ArduinoANN - An artificial neural network for the Arduino
   All basic settings can be controlled via the Network Configuration
   section.
   See robotics.hobbizine.com/arduinoann.html for details.
 ******************************************************************/

/*
 *
 *
 * TrainingCycle: 41076119  Error = 0.00001

  Training Pattern: 0  Input  1.000  1.000  1.000  1.000  1.000  1.000  0.000   Target  0.000  0.000  0.000  0.000   Output  0.00083  0.00083  0.00070  0.00075
  Training Pattern: 1  Input  0.000  1.000  1.000  0.000  0.000  0.000  0.000   Target  0.000  0.000  0.000  1.000   Output  0.00012  0.00100  0.00083  0.99921
  Training Pattern: 2  Input  1.000  1.000  0.000  1.000  1.000  0.000  1.000   Target  0.000  0.000  1.000  0.000   Output  0.00092  0.00021  1.00000  0.00098
  Training Pattern: 3  Input  1.000  1.000  1.000  1.000  0.000  0.000  1.000   Target  0.000  0.000  1.000  1.000   Output  0.00072  0.00088  0.99910  0.99914
  Training Pattern: 4  Input  0.000  1.000  1.000  0.000  0.000  1.000  1.000   Target  0.000  1.000  0.000  0.000   Output  0.00041  0.99958  0.00063  0.00040
  Training Pattern: 5  Input  1.000  0.000  1.000  1.000  0.000  1.000  1.000   Target  0.000  1.000  0.000  1.000   Output  0.00049  0.99929  0.00120  0.99963
  Training Pattern: 6  Input  0.000  0.000  1.000  1.000  1.000  1.000  1.000   Target  0.000  1.000  1.000  0.000   Output  0.00000  0.99927  0.99897  0.00000
  Training Pattern: 7  Input  1.000  1.000  1.000  0.000  0.000  0.000  0.000   Target  0.000  1.000  1.000  1.000   Output  0.00000  0.99881  0.99893  0.99999
  Training Pattern: 8  Input  1.000  1.000  1.000  1.000  1.000  1.000  1.000   Target  1.000  0.000  0.000  0.000   Output  0.99865  0.00000  0.00026  0.00050
  Training Pattern: 9  Input  1.000  1.000  1.000  0.000  0.000  1.000  1.000   Target  1.000  0.000  0.000  1.000   Output  0.99918  0.00032  0.00000  0.99950

Training Set Solved!
--------

HiddenWeights=
{
	{-3.477440,2.678823,-1.890451,2.429075,3.062039,1.466780,2.143420,-1.253443},
	{3.451729,-1.536530,2.251330,-2.000000,-4.438273,-3.531740,-0.390288,2.000000},
	{-7.402481,-4.062773,-0.383367,0.508765,-1.143037,4.611711,3.496842,-0.500000},
	{6.316988,0.294654,-2.064504,0.522832,-1.623320,-6.124825,-0.999999,-1.043041},
	{-3.069669,1.063713,0.579201,4.000000,1.547853,-4.861787,-0.886345,0.756814},
	{-3.460141,7.405190,-2.352268,0.362883,-3.933047,7.064098,0.502063,-3.572501},
	{-8.000000,3.792803,2.497474,2.618558,2.000000,-1.462113,-8.000000,4.000000},
	{-1.241549,-1.496270,3.196710,1.404968,-4.564205,1.130443,-4.667371,2.569994}
}
OutputWeights=
{
	{1.113935,2.028543,-6.833564,-6.460591,-2.128460,8.088761,-8.002007,-7.486404,-0.167645},
	{-5.905791,-1.830506,15.132903,4.980490,-6.816560,-5.292979,3.814512,4.001953,-0.495854},
	{-1.790511,-1.877855,5.375463,11.635944,4.783153,-8.250873,4.000000,-6.212863,-0.873748},
	{-7.472363,9.438042,-3.881657,1.045659,-0.090821,0.841093,-4.455671,5.905634,-0.830129}
}
End

  Training Pattern: 0  Input  1.000  1.000  1.000  1.000  1.000  1.000  0.000   Target  0.000  0.000  0.000  0.000   Output  0.00083  0.00083  0.00070  0.00075
  Training Pattern: 1  Input  0.000  1.000  1.000  0.000  0.000  0.000  0.000   Target  0.000  0.000  0.000  1.000   Output  0.00012  0.00100  0.00083  0.99921
  Training Pattern: 2  Input  1.000  1.000  0.000  1.000  1.000  0.000  1.000   Target  0.000  0.000  1.000  0.000   Output  0.00092  0.00021  1.00000  0.00098
  Training Pattern: 3  Input  1.000  1.000  1.000  1.000  0.000  0.000  1.000   Target  0.000  0.000  1.000  1.000   Output  0.00072  0.00088  0.99910  0.99914
  Training Pattern: 4  Input  0.000  1.000  1.000  0.000  0.000  1.000  1.000   Target  0.000  1.000  0.000  0.000   Output  0.00041  0.99958  0.00063  0.00040
  Training Pattern: 5  Input  1.000  0.000  1.000  1.000  0.000  1.000  1.000   Target  0.000  1.000  0.000  1.000   Output  0.00049  0.99929  0.00120  0.99963
  Training Pattern: 6  Input  0.000  0.000  1.000  1.000  1.000  1.000  1.000   Target  0.000  1.000  1.000  0.000   Output  0.00000  0.99927  0.99897  0.00000
  Training Pattern: 7  Input  1.000  1.000  1.000  0.000  0.000  0.000  0.000   Target  0.000  1.000  1.000  1.000   Output  0.00000  0.99881  0.99893  0.99999
  Training Pattern: 8  Input  1.000  1.000  1.000  1.000  1.000  1.000  1.000   Target  1.000  0.000  0.000  0.000   Output  0.99865  0.00000  0.00026  0.00050

 */
 


#include "neuralnet1.h"
 
#if defined(C_PRINT)
#include <stdio.h>
#endif 


int main ()
{
	int i = 0 ;
	int PatternCount = 50; //10;
	int InputNodes = 14;
	int HiddenNodes = 15;
	int OutputNodes = 3;
	float LearningRate = 0.3;
	float Momentum = 0.9;
	float InitialWeightMax = 0.5;
	float Success = 0.000004;
	

cconst float Target_test[ OutputNodes ][ PatternCount ] = {
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 },
	{ 0 , 0 , 1 },
	{ 0 , 1 , 0 },
	{ 1 , 0 , 0 }
};
const float Input_test[ InputNodes ][ PatternCount ] = {
	{  0.13213333333333332, 0.1306, 0.1298, 0.13, 0.13073333333333334, 0.13013333333333332, 0.12966666666666668, 0.13046666666666668, 0.132, 0.133, 0.1328, 0.13106666666666666, 0.1292, 0.1278}, //1979.84
	{  0.03326666666666667, 0.03406666666666667, 0.03233333333333333, 0.0318, 0.033466666666666665, 0.0344, 0.03286666666666667, 0.031933333333333334, 0.034666666666666665, 0.03546666666666667, 0.0336, 0.032733333333333337, 0.03266666666666666, 0.028733333333333333}, //504.84
	{  0.21773333333333333, 0.21813333333333335, 0.21506666666666666, 0.215, 0.2148, 0.2132, 0.21333333333333335, 0.21493333333333334, 0.2152, 0.218, 0.2246, 0.2218, 0.2066, 0.19933333333333333}, //3242.92
	{  0.1304, 0.13046666666666668, 0.13013333333333332, 0.1288, 0.1292, 0.13046666666666668, 0.13033333333333333, 0.12973333333333334, 0.13106666666666666, 0.1326, 0.13293333333333332, 0.13066666666666665, 0.12926666666666667, 0.12873333333333334}, //1979.84
	{  0.03333333333333333, 0.03233333333333333, 0.03213333333333333, 0.0332, 0.03333333333333333, 0.03213333333333333, 0.032266666666666666, 0.033466666666666665, 0.03233333333333333, 0.03153333333333333, 0.0328, 0.033933333333333336, 0.03186666666666667, 0.0268}, //504.84
	{  0.21693333333333334, 0.21846666666666667, 0.21586666666666668, 0.21393333333333334, 0.2146, 0.21433333333333332, 0.21273333333333333, 0.21313333333333334, 0.21526666666666666, 0.21786666666666665, 0.2194, 0.21753333333333333, 0.21326666666666666, 0.20706666666666668}, //3242.92
	{  0.13353333333333334, 0.1298, 0.12906666666666666, 0.1306, 0.1306, 0.12866666666666668, 0.12893333333333334, 0.13146666666666668, 0.13153333333333334, 0.13073333333333334, 0.1324, 0.13333333333333333, 0.13086666666666666, 0.12786666666666666}, //1979.84
	{  0.0326, 0.033466666666666665, 0.0336, 0.03233333333333333, 0.032733333333333337, 0.0344, 0.03406666666666667, 0.032733333333333337, 0.03373333333333333, 0.03473333333333333, 0.0332, 0.03133333333333333, 0.030133333333333335, 0.0284}, //504.84
	{  0.21713333333333334, 0.21933333333333332, 0.2162, 0.21373333333333333, 0.21386666666666668, 0.21446666666666667, 0.2136, 0.2132, 0.21453333333333333, 0.2178, 0.21973333333333334, 0.2186, 0.21386666666666668, 0.20893333333333333}, //3242.92
	{  0.218, 0.2198, 0.21646666666666667, 0.2142, 0.214, 0.21386666666666668, 0.21333333333333335, 0.21386666666666668, 0.21526666666666666, 0.21646666666666667, 0.21906666666666666, 0.21893333333333334, 0.21453333333333333, 0.2092}, //3242.92
	{  0.1324, 0.1298, 0.1304, 0.13246666666666668, 0.13166666666666665, 0.12993333333333335, 0.131, 0.1318, 0.13086666666666666, 0.1312, 0.13353333333333334, 0.13293333333333332, 0.1304, 0.12913333333333332}, //1979.84
	{  0.0332, 0.0328, 0.031933333333333334, 0.032466666666666665, 0.03353333333333333, 0.032733333333333337, 0.03233333333333333, 0.03353333333333333, 0.034133333333333335, 0.032933333333333335, 0.032266666666666666, 0.033133333333333334, 0.0328, 0.0276}, //504.84
	{  0.21593333333333334, 0.21853333333333333, 0.216, 0.2132, 0.21533333333333332, 0.2154, 0.21313333333333334, 0.21266666666666667, 0.2144, 0.21646666666666667, 0.21786666666666665, 0.2178, 0.21393333333333334, 0.21033333333333334}, //3242.92
	{  0.132, 0.129, 0.1294, 0.13106666666666666, 0.12986666666666666, 0.12873333333333334, 0.13026666666666667, 0.13186666666666666, 0.1314, 0.13173333333333334, 0.1328, 0.13166666666666665, 0.12693333333333334, 0.12593333333333334}, //1979.84
	{  0.0324, 0.032466666666666665, 0.033133333333333334, 0.033133333333333334, 0.032266666666666666, 0.03306666666666667, 0.03473333333333333, 0.03453333333333333, 0.032733333333333337, 0.032933333333333335, 0.0336, 0.033, 0.030933333333333334, 0.0292}, //504.84
	{  0.21786666666666665, 0.2188, 0.2156, 0.21446666666666667, 0.21533333333333332, 0.214, 0.21273333333333333, 0.21373333333333333, 0.21593333333333334, 0.2174, 0.2184, 0.21746666666666667, 0.21386666666666668, 0.20866666666666667}, //3242.92
	{  0.1344, 0.1304, 0.1294, 0.13046666666666668, 0.12986666666666666, 0.12866666666666668, 0.12866666666666668, 0.13006666666666666, 0.1298, 0.13006666666666666, 0.13193333333333335, 0.13333333333333333, 0.1308, 0.1294}, //1979.84
	{  0.032933333333333335, 0.032266666666666666, 0.032266666666666666, 0.033, 0.032933333333333335, 0.03206666666666667, 0.03233333333333333, 0.033466666666666665, 0.03306666666666667, 0.03253333333333333, 0.033, 0.03333333333333333, 0.0316, 0.027533333333333333}, //504.84
	{  0.2154, 0.2174, 0.2188, 0.21806666666666666, 0.21626666666666666, 0.2164, 0.2168, 0.21473333333333333, 0.21293333333333334, 0.21526666666666666, 0.2202, 0.2192, 0.2128, 0.20986666666666667}, //3242.92
	{  0.1318, 0.12953333333333333, 0.1298, 0.13093333333333335, 0.1304, 0.1302, 0.13146666666666668, 0.13286666666666666, 0.13186666666666666, 0.13113333333333332, 0.13286666666666666, 0.133, 0.13033333333333333, 0.12886666666666666}, //1979.84
	{  0.0318, 0.033, 0.0334, 0.032733333333333337, 0.03253333333333333, 0.0332, 0.03286666666666667, 0.0322, 0.0328, 0.034466666666666666, 0.034466666666666666, 0.03353333333333333, 0.032933333333333335, 0.030666666666666665}, //504.84
	{  0.21313333333333334, 0.21553333333333333, 0.219, 0.21806666666666666, 0.2154, 0.21566666666666667, 0.21633333333333332, 0.2154, 0.2136, 0.21533333333333332, 0.2206, 0.22046666666666667, 0.2148, 0.21}, //3242.92
	{  0.13213333333333332, 0.13066666666666665, 0.13126666666666667, 0.13093333333333335, 0.12973333333333334, 0.1296, 0.1306, 0.13113333333333332, 0.1304, 0.1314, 0.13366666666666666, 0.13226666666666667, 0.13033333333333333, 0.1298}, //1979.84
	{  0.0332, 0.0322, 0.0328, 0.03373333333333333, 0.033133333333333334, 0.0324, 0.033933333333333336, 0.034333333333333334, 0.032933333333333335, 0.032466666666666665, 0.0338, 0.033466666666666665, 0.0314, 0.0282}, //504.84
	{  0.2166, 0.21653333333333333, 0.2164, 0.2166, 0.21486666666666668, 0.21286666666666668, 0.2148, 0.2154, 0.2144, 0.21586666666666668, 0.2204, 0.21633333333333332, 0.2098, 0.20646666666666666}, //3242.92
	{  0.1316, 0.13093333333333335, 0.13093333333333335, 0.12966666666666668, 0.129, 0.12993333333333335, 0.13073333333333334, 0.13086666666666666, 0.13166666666666665, 0.13373333333333334, 0.13386666666666666, 0.13186666666666666, 0.1306, 0.1302}, //1979.84
	{  0.0334, 0.032266666666666666, 0.03326666666666667, 0.03426666666666667, 0.033, 0.0314, 0.03326666666666667, 0.034466666666666666, 0.03373333333333333, 0.0338, 0.034866666666666664, 0.0344, 0.03213333333333333, 0.029}, //504.84
	{  0.21626666666666666, 0.2192, 0.21706666666666666, 0.2144, 0.21273333333333333, 0.215, 0.21546666666666667, 0.2134, 0.21386666666666668, 0.2206, 0.22593333333333335, 0.21966666666666668, 0.20266666666666666, 0.19606666666666667}, //3242.92
	{  0.1328, 0.1314, 0.12953333333333333, 0.1302, 0.1306, 0.13013333333333332, 0.12973333333333334, 0.13073333333333334, 0.1318, 0.13226666666666667, 0.133, 0.13226666666666667, 0.13093333333333335, 0.1292}, //1979.84
	{  0.03373333333333333, 0.033, 0.032, 0.03286666666666667, 0.03426666666666667, 0.033933333333333336, 0.0324, 0.03286666666666667, 0.034133333333333335, 0.03306666666666667, 0.0324, 0.0332, 0.03306666666666667, 0.029066666666666668}, //504.84
	{  0.21746666666666667, 0.21973333333333334, 0.21526666666666666, 0.2142, 0.2156, 0.21413333333333334, 0.21273333333333333, 0.2142, 0.2162, 0.21733333333333332, 0.21826666666666666, 0.21826666666666666, 0.21466666666666667, 0.2096}, //3242.92
	{  0.13193333333333335, 0.13113333333333332, 0.13073333333333334, 0.12973333333333334, 0.1298, 0.1304, 0.13006666666666666, 0.1304, 0.13153333333333334, 0.13306666666666667, 0.13273333333333334, 0.1328, 0.14233333333333334, 0.1538}, //1979.84
	{  0.0334, 0.03206666666666667, 0.0328, 0.0342, 0.032933333333333335, 0.03233333333333333, 0.034, 0.034866666666666664, 0.03333333333333333, 0.032733333333333337, 0.034, 0.03473333333333333, 0.03133333333333333, 0.028466666666666668}, //504.84
	{  0.21646666666666667, 0.21993333333333334, 0.21733333333333332, 0.21326666666666666, 0.21373333333333333, 0.2152, 0.21373333333333333, 0.21306666666666665, 0.21573333333333333, 0.21833333333333332, 0.21953333333333333, 0.217, 0.2152, 0.21306666666666665}, //3242.92
	{  0.13226666666666667, 0.13133333333333333, 0.13066666666666665, 0.1296, 0.13033333333333333, 0.13153333333333334, 0.13166666666666665, 0.1314, 0.13226666666666667, 0.13333333333333333, 0.13273333333333334, 0.131, 0.13066666666666665, 0.13053333333333333}, //1979.84
	{  0.03266666666666666, 0.03353333333333333, 0.03286666666666667, 0.0314, 0.031933333333333334, 0.033666666666666664, 0.03333333333333333, 0.03233333333333333, 0.0338, 0.035133333333333336, 0.03406666666666667, 0.03266666666666666, 0.032, 0.030066666666666665}, //504.84
	{  0.2174, 0.21986666666666665, 0.2158, 0.21293333333333334, 0.21413333333333334, 0.21473333333333333, 0.21286666666666668, 0.2128, 0.21533333333333332, 0.21733333333333332, 0.2188, 0.21713333333333334, 0.21426666666666666, 0.21006666666666668}, //3242.92
	{  0.13213333333333332, 0.13153333333333334, 0.13013333333333332, 0.12953333333333333, 0.13033333333333333, 0.1308, 0.13, 0.12993333333333335, 0.13186666666666666, 0.13286666666666666, 0.13273333333333334, 0.1322, 0.1314, 0.13013333333333332}, //1979.84
	{  0.0324, 0.033933333333333336, 0.0334, 0.0318, 0.0322, 0.034333333333333334, 0.03386666666666667, 0.03213333333333333, 0.0338, 0.035133333333333336, 0.03373333333333333, 0.03213333333333333, 0.03186666666666667, 0.029733333333333334}, //504.84
	{  0.21746666666666667, 0.21993333333333334, 0.21753333333333333, 0.21373333333333333, 0.2134, 0.2146, 0.2144, 0.21293333333333334, 0.21513333333333334, 0.21826666666666666, 0.2206, 0.2186, 0.21326666666666666, 0.20993333333333333}, //3242.92
	{  0.13346666666666668, 0.13126666666666667, 0.1298, 0.1306, 0.132, 0.13173333333333334, 0.13053333333333333, 0.13106666666666666, 0.13173333333333334, 0.1326, 0.13346666666666668, 0.13333333333333333, 0.1314, 0.1298}, //1979.84
	{  0.03353333333333333, 0.03186666666666667, 0.032466666666666665, 0.0346, 0.03386666666666667, 0.03286666666666667, 0.033933333333333336, 0.034866666666666664, 0.033933333333333336, 0.03333333333333333, 0.0344, 0.0344, 0.0302, 0.0274}, //504.84
	{  0.2166, 0.22013333333333332, 0.21573333333333333, 0.21373333333333333, 0.2148, 0.21486666666666668, 0.21353333333333332, 0.21326666666666666, 0.21513333333333334, 0.21833333333333332, 0.2194, 0.2182, 0.21426666666666666, 0.2114}, //3242.92
	{  0.13146666666666668, 0.1314, 0.13053333333333333, 0.12973333333333334, 0.13053333333333333, 0.13106666666666666, 0.13053333333333333, 0.1302, 0.1314, 0.13393333333333332, 0.13286666666666666, 0.13086666666666666, 0.1294, 0.12993333333333335}, //1979.84
	{  0.034133333333333335, 0.03306666666666667, 0.031733333333333336, 0.033, 0.034466666666666666, 0.03353333333333333, 0.03213333333333333, 0.03333333333333333, 0.035, 0.03333333333333333, 0.03253333333333333, 0.03386666666666667, 0.0336, 0.028666666666666667}, //504.84
	{  0.215, 0.21933333333333332, 0.2184, 0.21413333333333334, 0.21353333333333332, 0.21466666666666667, 0.21373333333333333, 0.2128, 0.2138, 0.2174, 0.21946666666666667, 0.21853333333333333, 0.21593333333333334, 0.2114}, //3242.92
	{  0.1324, 0.13173333333333334, 0.1302, 0.1294, 0.13026666666666667, 0.13126666666666667, 0.13033333333333333, 0.12973333333333334, 0.13093333333333335, 0.13286666666666666, 0.13213333333333332, 0.13126666666666667, 0.13126666666666667, 0.131}, //1979.84
	{  0.03213333333333333, 0.0334, 0.033933333333333336, 0.0326, 0.032266666666666666, 0.034466666666666666, 0.0346, 0.032466666666666665, 0.03253333333333333, 0.035133333333333336, 0.03473333333333333, 0.032733333333333337, 0.031066666666666666, 0.029466666666666665}, //504.84
	{  0.21666666666666667, 0.21953333333333333, 0.21553333333333333, 0.21366666666666667, 0.2144, 0.21533333333333332, 0.215, 0.21393333333333334, 0.2148, 0.2206, 0.22453333333333333, 0.2186, 0.203, 0.19706666666666667}, //3242.92
	{  0.1334, 0.12993333333333335, 0.1296, 0.13073333333333334, 0.13046666666666668, 0.12926666666666667, 0.12986666666666666, 0.13173333333333334, 0.13146666666666668, 0.13106666666666666, 0.13273333333333334, 0.1332, 0.13106666666666666, 0.13}, //1979.84
	{  0.0322, 0.0326, 0.034333333333333334, 0.033666666666666664, 0.031466666666666664, 0.033133333333333334, 0.03473333333333333, 0.03373333333333333, 0.0322, 0.0334, 0.034866666666666664, 0.03333333333333333, 0.030333333333333334, 0.028933333333333332}, //504.84
	{  0.21513333333333334, 0.21926666666666667, 0.21673333333333333, 0.21446666666666667, 0.21433333333333332, 0.21473333333333333, 0.21393333333333334, 0.2136, 0.21473333333333333, 0.21773333333333333, 0.2194, 0.21826666666666666, 0.21426666666666666, 0.21046666666666666}, //3242.92
	{  0.13153333333333334, 0.13033333333333333, 0.13153333333333334, 0.13053333333333333, 0.129, 0.1298, 0.131, 0.13013333333333332, 0.12893333333333334, 0.13066666666666665, 0.13293333333333332, 0.13186666666666666, 0.12953333333333333, 0.1306}, //1979.84
	{  0.0342, 0.033466666666666665, 0.03266666666666666, 0.033133333333333334, 0.033933333333333336, 0.03326666666666667, 0.03253333333333333, 0.03373333333333333, 0.034333333333333334, 0.033666666666666664, 0.03326666666666667, 0.0334, 0.03186666666666667, 0.029133333333333334}, //504.84
	{  0.21686666666666668, 0.21866666666666668, 0.216, 0.21553333333333333, 0.21573333333333333, 0.2132, 0.21266666666666667, 0.215, 0.21606666666666666, 0.21686666666666668, 0.21973333333333334, 0.22006666666666666, 0.21506666666666666, 0.21006666666666668}, //3242.92
	{  0.132, 0.13086666666666666, 0.1308, 0.1304, 0.13033333333333333, 0.13126666666666667, 0.13133333333333333, 0.13046666666666668, 0.131, 0.1326, 0.1334, 0.13146666666666668, 0.13046666666666668, 0.13093333333333335}, //1979.84
	{  0.0336, 0.032266666666666666, 0.0328, 0.03426666666666667, 0.0334, 0.031733333333333336, 0.03253333333333333, 0.0346, 0.03326666666666667, 0.032266666666666666, 0.03326666666666667, 0.0342, 0.032466666666666665, 0.029}, //504.84
	{  0.2176, 0.218, 0.21513333333333334, 0.2156, 0.21593333333333334, 0.21426666666666666, 0.21313333333333334, 0.2152, 0.2162, 0.21726666666666666, 0.21886666666666665, 0.2192, 0.21346666666666667, 0.20986666666666667}, //3242.92
	{  0.13293333333333332, 0.13186666666666666, 0.12986666666666666, 0.1296, 0.1304, 0.1306, 0.12973333333333334, 0.13006666666666666, 0.13186666666666666, 0.1326, 0.13266666666666665, 0.1326, 0.13213333333333332, 0.13026666666666667}, //1979.84
	{  0.033466666666666665, 0.03406666666666667, 0.03213333333333333, 0.032, 0.034133333333333335, 0.03386666666666667, 0.03253333333333333, 0.033466666666666665, 0.0354, 0.035133333333333336, 0.03253333333333333, 0.0324, 0.0328, 0.028066666666666667}, //504.84
	{  0.2166, 0.2194, 0.21793333333333334, 0.21446666666666667, 0.21413333333333334, 0.21533333333333332, 0.21506666666666666, 0.21313333333333334, 0.21433333333333332, 0.21733333333333332, 0.22013333333333332, 0.2168, 0.21333333333333335, 0.21046666666666666}, //3242.92
	{  0.13146666666666668, 0.13086666666666666, 0.13013333333333332, 0.12953333333333333, 0.13006666666666666, 0.13173333333333334, 0.13126666666666667, 0.13006666666666666, 0.1314, 0.13333333333333333, 0.1334, 0.13186666666666666, 0.1306, 0.13086666666666666}, //1979.84
	{  0.0326, 0.0346, 0.034133333333333335, 0.03233333333333333, 0.032, 0.0334, 0.0334, 0.0318, 0.032733333333333337, 0.0352, 0.033933333333333336, 0.0322, 0.031733333333333336, 0.030933333333333334}, //504.84
	{  0.21966666666666668, 0.21813333333333335, 0.21593333333333334, 0.21606666666666666, 0.21586666666666668, 0.214, 0.2148, 0.21593333333333334, 0.21626666666666666, 0.2212, 0.22533333333333333, 0.21766666666666667, 0.20593333333333333, 0.1986}, //3242.92
	{  0.1322, 0.13086666666666666, 0.13026666666666667, 0.13153333333333334, 0.13193333333333335, 0.13073333333333334, 0.13086666666666666, 0.1338, 0.1356, 0.13533333333333333, 0.13353333333333334, 0.13153333333333334, 0.12986666666666666, 0.129}, //1979.84
	{  0.03286666666666667, 0.0322, 0.03426666666666667, 0.0344, 0.0318, 0.031466666666666664, 0.033933333333333336, 0.034466666666666666, 0.033133333333333334, 0.03353333333333333, 0.03553333333333333, 0.034666666666666665, 0.030333333333333334, 0.028066666666666667}, //504.84
	{  0.2172, 0.21933333333333332, 0.2162, 0.21386666666666668, 0.2148, 0.21473333333333333, 0.21246666666666666, 0.21233333333333335, 0.21506666666666666, 0.21806666666666666, 0.21886666666666665, 0.21746666666666667, 0.21473333333333333, 0.2118}, //3242.92
	{  0.13313333333333333, 0.1314, 0.13053333333333333, 0.1314, 0.13166666666666665, 0.1302, 0.12993333333333335, 0.13186666666666666, 0.13266666666666665, 0.13266666666666665, 0.13293333333333332, 0.13293333333333332, 0.1312, 0.12953333333333333}, //1979.84
	{  0.0348, 0.032933333333333335, 0.03326666666666667, 0.034333333333333334, 0.03333333333333333, 0.0318, 0.032466666666666665, 0.035333333333333335, 0.035, 0.03326666666666667, 0.03426666666666667, 0.035, 0.032266666666666666, 0.0292}, //504.84
	{  0.21586666666666668, 0.21733333333333332, 0.21726666666666666, 0.2164, 0.21413333333333334, 0.21293333333333334, 0.21373333333333333, 0.21446666666666667, 0.21333333333333335, 0.21426666666666666, 0.21813333333333335, 0.2202, 0.21426666666666666, 0.2102}, //3242.92
	{  0.1328, 0.12993333333333335, 0.12913333333333332, 0.13046666666666668, 0.1316, 0.13106666666666666, 0.1302, 0.13153333333333334, 0.1322, 0.1326, 0.13266666666666665, 0.13253333333333334, 0.131, 0.13}, //1979.84
	{  0.03133333333333333, 0.032933333333333335, 0.0334, 0.03213333333333333, 0.03233333333333333, 0.03426666666666667, 0.035, 0.0326, 0.0326, 0.03493333333333333, 0.034133333333333335, 0.03213333333333333, 0.030866666666666667, 0.030266666666666667}, //504.84
	{  0.21546666666666667, 0.21726666666666666, 0.21766666666666667, 0.21626666666666666, 0.21326666666666666, 0.21306666666666665, 0.2144, 0.2152, 0.21466666666666667, 0.21693333333333334, 0.221, 0.21966666666666668, 0.21326666666666666, 0.2098}, //3242.92
	{  0.1322, 0.13126666666666667, 0.13066666666666665, 0.13006666666666666, 0.1304, 0.13086666666666666, 0.1302, 0.13013333333333332, 0.13193333333333335, 0.1338, 0.13333333333333333, 0.13073333333333334, 0.12986666666666666, 0.13006666666666666}, //1979.84
	{  0.03473333333333333, 0.0338, 0.031933333333333334, 0.03253333333333333, 0.0342, 0.03306666666666667, 0.03233333333333333, 0.0338, 0.034666666666666665, 0.03353333333333333, 0.03266666666666666, 0.03353333333333333, 0.0332, 0.029} //504.84
};

	//////////////////////
	// Manual work here ////////////|
	//////////////////////         \||/
	//								 .  
	
	float * input_test_rows[PatternCount] = { 
	Input_test[ 0 ]
	, Input_test[ 1 ]
	, Input_test[ 2 ]
	, Input_test[ 3 ]
	, Input_test[ 4 ]
	, Input_test[ 5 ]
	, Input_test[ 6 ]
	, Input_test[ 7 ]
	, Input_test[ 8 ]
	, Input_test[ 9 ]
	, Input_test[ 10 ]
	, Input_test[ 11 ]
	, Input_test[ 12 ]
	, Input_test[ 13 ]
	, Input_test[ 14 ]
	, Input_test[ 15 ]
	, Input_test[ 16 ]
	, Input_test[ 17 ]
	, Input_test[ 18 ]
	, Input_test[ 19 ]
	, Input_test[ 20 ]
	, Input_test[ 21 ]
	, Input_test[ 22 ]
	, Input_test[ 23 ]
	, Input_test[ 24 ]
	, Input_test[ 25 ]
	, Input_test[ 26 ]
	, Input_test[ 27 ]
	, Input_test[ 28 ]
	, Input_test[ 29 ]
	, Input_test[ 30 ]
	, Input_test[ 31 ]
	, Input_test[ 32 ]
	, Input_test[ 33 ]
	, Input_test[ 34 ]
	, Input_test[ 35 ]
	, Input_test[ 36 ]
	, Input_test[ 37 ]
	, Input_test[ 38 ]
	, Input_test[ 39 ]
	, Input_test[ 40 ]
	, Input_test[ 41 ]
	, Input_test[ 42 ]
	, Input_test[ 43 ]
	, Input_test[ 44 ]
	, Input_test[ 45 ]
	, Input_test[ 46 ]
	, Input_test[ 47 ]
	, Input_test[ 48 ]
	, Input_test[ 49 ]
};

float * target_test_rows[PatternCount] = { 
	Target_test[ 0 ]
	, Target_test[ 1 ]
	, Target_test[ 2 ]
	, Target_test[ 3 ]
	, Target_test[ 4 ]
	, Target_test[ 5 ]
	, Target_test[ 6 ]
	, Target_test[ 7 ]
	, Target_test[ 8 ]
	, Target_test[ 9 ]
	, Target_test[ 10 ]
	, Target_test[ 11 ]
	, Target_test[ 12 ]
	, Target_test[ 13 ]
	, Target_test[ 14 ]
	, Target_test[ 15 ]
	, Target_test[ 16 ]
	, Target_test[ 17 ]
	, Target_test[ 18 ]
	, Target_test[ 19 ]
	, Target_test[ 20 ]
	, Target_test[ 21 ]
	, Target_test[ 22 ]
	, Target_test[ 23 ]
	, Target_test[ 24 ]
	, Target_test[ 25 ]
	, Target_test[ 26 ]
	, Target_test[ 27 ]
	, Target_test[ 28 ]
	, Target_test[ 29 ]
	, Target_test[ 30 ]
	, Target_test[ 31 ]
	, Target_test[ 32 ]
	, Target_test[ 33 ]
	, Target_test[ 34 ]
	, Target_test[ 35 ]
	, Target_test[ 36 ]
	, Target_test[ 37 ]
	, Target_test[ 38 ]
	, Target_test[ 39 ]
	, Target_test[ 40 ]
	, Target_test[ 41 ]
	, Target_test[ 42 ]
	, Target_test[ 43 ]
	, Target_test[ 44 ]
	, Target_test[ 45 ]
	, Target_test[ 46 ]
	, Target_test[ 47 ]
	, Target_test[ 48 ]
	, Target_test[ 49 ]
};

	
	float ** input_test = input_test_rows;
	float ** target_test = target_test_rows;
	
	// Comman part
	Neuralnet1 nnet1(input_test, target_test
	, PatternCount, InputNodes, HiddenNodes, OutputNodes
	, LearningRate, Momentum, InitialWeightMax, Success);
	
	nnet1.initialize();
	
	float outarray[nnet1.GetOutputNodes()] = {0};
	float inarray[nnet1.GetInputNodes()] = {0,0,0,0,0,0,0}; // is misclasifying as 7, Target[7]
	
	// Example 1
	////////////////////////////////////////////////////////////////////
	nnet1.train();
	
	nnet1.activate(inarray, nnet1.GetInputNodes(), outarray, nnet1.GetOutputNodes());
	
	for ( i = 0 ; i < nnet1.GetOutputNodes() ; i++ ) 
	{
		printf(" %5.5f ", outarray[i]);
	}
	
	printf("\r\n\r\n");
	nnet1.saveWeights("test1.csv"); // if all fine save it.
	////////////////////////////////////////////////////////////////////
	
	// Example 2
	////////////////////////////////////////////////////////////////////
	nnet1.loadWeights("test.csv");
	
	nnet1.activate(inarray, nnet1.GetInputNodes(), outarray, nnet1.GetOutputNodes());
	
	for ( i = 0 ; i < nnet1.GetOutputNodes() ; i++ ) 
	{
		printf(" %5.5f ", outarray[i]);
	}
	
	printf("\r\n\r\n"); 
	////////////////////////////////////////////////////////////////////
	 
	//while(1); 
	return 0;
}
